===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
s1    s2    
Hierarchical Query is used to obtain a set of data organized in a hierarchy.The START WITH ... CONNECT BY clause is used in combination with the SELECT clause in the following form.You can execute the queries by changing the order of two clauses like CONNECT BY ... START WITH.The START WITH clause will filter the rows from which the hierarchy will start. The rows that satisfy the START WITH condition will be the root nodes of the hierarchy. If START WITH is omitted, then all the rows will be considered as root nodes.If a CONNECT BY statement causes a cycle at runtime and the NOCYCLE keyword is not specified, CUBRID will return an error and the statement will be canceled. When specifying the NOCYCLE keyword, if CUBRID detects a cycle while processing a hierarchy node, it will set the CONNECT_BY_ISCYCLE attribute for that node to the value of 1 and it will stop further expansion of that branch.     Hierarchical Query is used to obtain a set of data organized in a hierarchy.The START WITH ... CONNECT BY clause is used in combination with the SELECT clause in the following form.You can execute the queries by changing the order of two clauses like CONNECT BY ... START WITH.The START WITH clause w     
abc     def                                                                                                                                                                                                                                                                                                              

===================================================
disk_size(s1)    char_length(s1)    disk_size(s2)    char_length(s2)    
8     3     300     300     
680     905     300     300     

===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
0
===================================================
s1    
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa     

===================================================
char_length(:result)    disk_size(:result)    :result    
300     24     aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa     

===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
0
===================================================
b    c    
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff     mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm

===================================================
0
===================================================
disk_size(b)    disk_size(c)    
28     1000     
204     1000     

===================================================
0
===================================================
0
===================================================
0
